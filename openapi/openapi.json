{
  "openapi" : "3.1.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "Video API - Dubbing and Lipsync",
    "description" : "REST API for Transcription, Dubbing and Lipsync for enterprise usage"
  },
  "servers" : [ {
    "url" : "https://audio-video-api.adobe.io",
    "description" : "Production environment"
  }, {
    "url" : "https://audio-video-api-stage.adobe.io",
    "description" : "Staging environment"
  } ],
  "security" : [ {
    "AccessToken" : [ ],
    "X-Api-Key" : [ ]
  } ],
  "paths" : {
    "/beta/transcribe" : {
      "post" : {
        "summary" : "Transcribe media",
        "description" : "Generates transcripts for the input audio or video.",
        "operationId" : "transcribe",
        "requestBody" : {
          "description" : "Transcribe request body.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TranscribeRequest"
              },
              "examples" : {
                "AudioInputToGenerateTranscriptFromSourceAudio" : {
                  "$ref" : "#/components/examples/AudioInputToGenerateTranscriptFromSourceAudio"
                },
                "AudioInputToGenerateTranscriptFromTargetLanguageAudio" : {
                  "$ref" : "#/components/examples/AudioInputToGenerateTranscriptFromTargetLanguageAudio"
                },
                "VideoInputToGenerateTranscriptFromSourceVideo" : {
                  "$ref" : "#/components/examples/VideoInputToGenerateTranscriptFromSourceVideo"
                },
                "VideoInputToGenerateTranscriptFromTargetLanguageVideo" : {
                  "$ref" : "#/components/examples/VideoInputToGenerateTranscriptFromTargetLanguageVideo"
                }
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStatusLinkResponse"
                },
                "examples" : {
                  "TranscribeResponse" : {
                    "$ref" : "#/components/examples/JobStatusLinkResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyBadRequest" : {
                    "$ref" : "#/components/examples/ErrorBodyBadRequest"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyUnauthorized" : {
                    "$ref" : "#/components/examples/ErrorBodyUnauthorized"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyForbidden" : {
                    "$ref" : "#/components/examples/ErrorBodyForbidden"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "examples" : {
                  "ErrorBodyResourceNotFound" : {
                    "$ref" : "#/components/examples/ErrorBodyResourceNotFound"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyMethodNotAllowed" : {
                    "$ref" : "#/components/examples/ErrorBodyMethodNotAllowed"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyMethodNotAllowed" : {
                    "$ref" : "#/components/examples/ErrorBodyMethodNotAllowed"
                  },
                  "ValidationErrorVideoSourceBlank" : {
                    "$ref" : "#/components/examples/ValidationErrorVideoSourceBlank"
                  },
                  "ValidationErrorAudioSourceBlank" : {
                    "$ref" : "#/components/examples/ValidationErrorAudioSourceBlank"
                  },
                  "ValidationErrorInputSourceBlank" : {
                    "$ref" : "#/components/examples/ValidationErrorInputSourceBlank"
                  },
                  "ValidationErrorVideoAndAudioSimultaneous" : {
                    "$ref" : "#/components/examples/ValidationErrorVideoAndAudioSimultaneous"
                  },
                  "ValidationErrorVideoInputMediaTypeMissing" : {
                    "$ref" : "#/components/examples/ValidationErrorVideoInputMediaTypeMissing"
                  },
                  "ValidationErrorAudioInputMediaTypeMissing" : {
                    "$ref" : "#/components/examples/ValidationErrorAudioInputMediaTypeMissing"
                  },
                  "ValidationErrorSourceUrlEmpty" : {
                    "$ref" : "#/components/examples/ValidationErrorSourceUrlEmpty"
                  },
                  "ValidationErrorInvalidVideoAudioSourceUrl" : {
                    "$ref" : "#/components/examples/ValidationErrorInvalidVideoAudioSourceUrl"
                  },
                  "ValidationErrorBlankTranscriptSourceField" : {
                    "$ref" : "#/components/examples/ValidationErrorBlankTranscriptSourceField"
                  },
                  "ValidationErrorInvalidTranscriptUrl" : {
                    "$ref" : "#/components/examples/ValidationErrorInvalidTranscriptUrl"
                  },
                  "ValidationErrorUnsupportedVideoMediaType" : {
                    "$ref" : "#/components/examples/ValidationErrorUnsupportedVideoMediaType"
                  },
                  "ValidationErrorUnsupportedAudioMediaType" : {
                    "$ref" : "#/components/examples/ValidationErrorUnsupportedAudioMediaType"
                  },
                  "ValidationErrorUnsupportedTargetLocaleCode" : {
                    "$ref" : "#/components/examples/ValidationErrorUnsupportedTargetLocaleCode"
                  },
                  "ValidationErrorBlankTargetLocaleCode" : {
                    "$ref" : "#/components/examples/ValidationErrorBlankTargetLocaleCode                       "
                  },
                  "ValidationErrorMissingTargetLocaleCode" : {
                    "$ref" : "#/components/examples/ValidationErrorMissingTargetLocaleCode"
                  },
                  "ValidationErrorLocaleCodeNotRequiredForEditedTranscript" : {
                    "$ref" : "#/components/examples/ValidationErrorLocaleCodeNotRequiredForEditedTranscript"
                  },
                  "ValidationErrorEitherTargetLocaleCodesOrTranscriptionRequired" : {
                    "$ref" : "#/components/examples/ValidationErrorEitherTargetLocaleCodesOrTranscriptionRequired                 "
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyTooManyRequests" : {
                    "$ref" : "#/components/examples/ErrorBodyTooManyRequests"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyInternalServerError" : {
                    "$ref" : "#/components/examples/ErrorBodyInternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/beta/dub" : {
      "post" : {
        "summary" : "Perform dub on audio or video input",
        "description" : "Generates dubbed video or audio for input media with/without lipsync.",
        "operationId" : "dub",
        "requestBody" : {
          "description" : "Dub request body.",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DubRequest"
              },
              "examples" : {
                "DubRequestUsingAutoTranslatedTranscripts" : {
                  "$ref" : "#/components/examples/DubRequestUsingAutoTranslatedTranscripts"
                },
                "DubRequestUsingAudioAutoTranslatedTranscripts" : {
                  "$ref" : "#/components/examples/DubRequestUsingAudioAutoTranslatedTranscripts"
                },
                "DubRequestUsingEditedSourceTranscript" : {
                  "$ref" : "#/components/examples/DubRequestUsingEditedSourceTranscript"
                },
                "DubRequestUsingAudioEditedSourceTranscript" : {
                  "$ref" : "#/components/examples/DubRequestUsingAudioEditedSourceTranscript"
                },
                "DubRequestUsingEditedTranslatedTranscript" : {
                  "$ref" : "#/components/examples/DubRequestUsingEditedTranslatedTranscript"
                },
                "DubRequestUsingAudioEditedTranslatedTranscript" : {
                  "$ref" : "#/components/examples/DubRequestUsingAudioEditedTranslatedTranscript"
                }
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStatusLinkResponse"
                },
                "examples" : {
                  "DubResponse" : {
                    "$ref" : "#/components/examples/JobStatusLinkResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyBadRequest" : {
                    "$ref" : "#/components/examples/ErrorBodyBadRequest"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyUnauthorized" : {
                    "$ref" : "#/components/examples/ErrorBodyUnauthorized"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyForbidden" : {
                    "$ref" : "#/components/examples/ErrorBodyForbidden"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "examples" : {
                  "ErrorBodyResourceNotFound" : {
                    "$ref" : "#/components/examples/ErrorBodyResourceNotFound"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyMethodNotAllowed" : {
                    "$ref" : "#/components/examples/ErrorBodyMethodNotAllowed"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyMethodNotAllowed" : {
                    "$ref" : "#/components/examples/ErrorBodyMethodNotAllowed"
                  },
                  "ValidationErrorVideoSourceBlank" : {
                    "$ref" : "#/components/examples/ValidationErrorVideoSourceBlank"
                  },
                  "ValidationErrorAudioSourceBlank" : {
                    "$ref" : "#/components/examples/ValidationErrorAudioSourceBlank"
                  },
                  "ValidationErrorInputSourceBlank" : {
                    "$ref" : "#/components/examples/ValidationErrorInputSourceBlank"
                  },
                  "ValidationErrorVideoAndAudioSimultaneous" : {
                    "$ref" : "#/components/examples/ValidationErrorVideoAndAudioSimultaneous"
                  },
                  "ValidationErrorVideoInputMediaTypeMissing" : {
                    "$ref" : "#/components/examples/ValidationErrorVideoInputMediaTypeMissing"
                  },
                  "ValidationErrorAudioInputMediaTypeMissing" : {
                    "$ref" : "#/components/examples/ValidationErrorAudioInputMediaTypeMissing"
                  },
                  "ValidationErrorSourceUrlEmpty" : {
                    "$ref" : "#/components/examples/ValidationErrorSourceUrlEmpty"
                  },
                  "ValidationErrorInvalidVideoAudioSourceUrl" : {
                    "$ref" : "#/components/examples/ValidationErrorInvalidVideoAudioSourceUrl"
                  },
                  "ValidationErrorInvalidTranscriptUrl" : {
                    "$ref" : "#/components/examples/ValidationErrorInvalidTranscriptUrl"
                  },
                  "ValidationErrorUnsupportedVideoMediaType" : {
                    "$ref" : "#/components/examples/ValidationErrorUnsupportedVideoMediaType"
                  },
                  "ValidationErrorUnsupportedAudioMediaType" : {
                    "$ref" : "#/components/examples/ValidationErrorUnsupportedAudioMediaType"
                  },
                  "ValidationErrorUnsupportedTargetLocaleCode" : {
                    "$ref" : "#/components/examples/ValidationErrorUnsupportedTargetLocaleCode"
                  },
                  "ValidationErrorMissingTargetLocaleCode" : {
                    "$ref" : "#/components/examples/ValidationErrorMissingTargetLocaleCode"
                  },
                  "ValidationErrorLocaleCodeNotRequiredForEditedTranscript" : {
                    "$ref" : "#/components/examples/ValidationErrorLocaleCodeNotRequiredForEditedTranscript"
                  },
                  "ValidationErrorEitherTargetLocaleCodesOrTranscriptionRequired" : {
                    "$ref" : "#/components/examples/ValidationErrorEitherTargetLocaleCodesOrTranscriptionRequired"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyTooManyRequests" : {
                    "$ref" : "#/components/examples/ErrorBodyTooManyRequests"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyInternalServerError" : {
                    "$ref" : "#/components/examples/ErrorBodyInternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/beta/status/{jobId}" : {
      "get" : {
        "summary" : "Get the result for a job",
        "description" : "Provides the result for an async dub or transcribe job.",
        "operationId" : "jobResult",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "The job id to get status for an async dub or transcribe job",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FireflyJobResponse"
                },
                "examples" : {
                  "TranscribeJobSucceeded" : {
                    "$ref" : "#/components/examples/TranscribeJobSucceeded"
                  },
                  "TranscribeJobPartiallySucceeded" : {
                    "$ref" : "#/components/examples/TranscribeJobPartiallySucceeded"
                  },
                  "DubJobSucceeded" : {
                    "$ref" : "#/components/examples/DubJobSucceeded"
                  },
                  "DubJobPartiallySucceeded" : {
                    "$ref" : "#/components/examples/DubJobPartiallySucceeded"
                  },
                  "JobFailed" : {
                    "$ref" : "#/components/examples/JobFailed"
                  },
                  "JobIsStillRunning" : {
                    "$ref" : "#/components/examples/JobIsStillRunning"
                  },
                  "JobIsInPendingState" : {
                    "$ref" : "#/components/examples/JobIsInPendingState"
                  },
                  "Access_error" : {
                    "$ref" : "#/components/examples/Access_error"
                  },
                  "ValidationError_AudioVideo_Required" : {
                    "$ref" : "#/components/examples/ValidationError_AudioVideo_Required"
                  },
                  "ValidationErrorTargetOrTranscripts" : {
                    "$ref" : "#/components/examples/ValidationErrorTargetOrTranscripts"
                  },
                  "ValidationErrorMissingLocale" : {
                    "$ref" : "#/components/examples/ValidationErrorMissingLocale"
                  },
                  "LanguageNotSupported" : {
                    "$ref" : "#/components/examples/LanguageNotSupported"
                  },
                  "AudioSpeechNotDetectedSingle" : {
                    "$ref" : "#/components/examples/AudioSpeechNotDetectedSingle"
                  },
                  "ValidationErrorRedubbing" : {
                    "$ref" : "#/components/examples/ValidationErrorRedubbing"
                  },
                  "ValidationErrorProprietaryContent" : {
                    "$ref" : "#/components/examples/ValidationErrorProprietaryContent"
                  },
                  "ValidationErrorUnrecognizedLanguage" : {
                    "$ref" : "#/components/examples/ValidationErrorUnrecognizedLanguage"
                  },
                  "AudioSpeechNotDetectedMulti" : {
                    "$ref" : "#/components/examples/AudioSpeechNotDetectedMulti"
                  },
                  "ValidationErrorDialogTrackNumber" : {
                    "$ref" : "#/components/examples/ValidationErrorDialogTrackNumber"
                  },
                  "ValidationErrorDownloadFailure" : {
                    "$ref" : "#/components/examples/ValidationErrorDownloadFailure"
                  },
                  "VideoNotDetected" : {
                    "$ref" : "#/components/examples/VideoNotDetected"
                  },
                  "AudioNotDetectedUnsupported" : {
                    "$ref" : "#/components/examples/AudioNotDetectedUnsupported"
                  },
                  "ValidationErrorVideoDuration" : {
                    "$ref" : "#/components/examples/ValidationErrorVideoDuration"
                  },
                  "InputMediaIndecipherableFaces" : {
                    "$ref" : "#/components/examples/InputMediaIndecipherableFaces"
                  },
                  "ValidationErrorCodecUnsupported" : {
                    "$ref" : "#/components/examples/ValidationErrorCodecUnsupported"
                  },
                  "ValidationErrorMaxSupportedResolution" : {
                    "$ref" : "#/components/examples/ValidationErrorMaxSupportedResolution"
                  },
                  "ValidationErrorInvalidMediaProvided" : {
                    "$ref" : "#/components/examples/ValidationErrorInvalidMediaProvided"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyUnauthorized" : {
                    "$ref" : "#/components/examples/ErrorBodyUnauthorized"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyForbidden" : {
                    "$ref" : "#/components/examples/ErrorBodyForbidden"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found",
            "content" : {
              "application/json" : {
                "examples" : {
                  "ErrorBodyResourceNotFound" : {
                    "$ref" : "#/components/examples/ErrorBodyResourceNotFound"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyMethodNotAllowed" : {
                    "$ref" : "#/components/examples/ErrorBodyMethodNotAllowed"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyTooManyRequests" : {
                    "$ref" : "#/components/examples/ErrorBodyTooManyRequests"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorBody"
                },
                "examples" : {
                  "ErrorBodyInternalServerError" : {
                    "$ref" : "#/components/examples/ErrorBodyInternalServerError"
                  },
                  "ErrorBodyOFServiceInternalServerError" : {
                    "$ref" : "#/components/examples/ErrorBodyServiceInternalServerError"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "AccessToken" : {
        "type" : "http",
        "scheme" : "bearer"
      },
      "X-Api-Key" : {
        "type" : "apiKey",
        "name" : "x-api-key",
        "in" : "header"
      }
    },
    "schemas" : {
      "AudioInputMediaType" : {
        "type" : "string",
        "enum" : [ "audio/mp3", "audio/mpeg", "audio/x-wav", "audio/wav", "audio/vnd.dlna.adts", "audio/aac" ],
        "description" : "Supported audio media types"
      },
      "VideoInputMediaType" : {
        "type" : "string",
        "enum" : [ "video/mp4", "video/quicktime", "video/mov" ],
        "description" : "Supported Video media types"
      },
      "TranscriptInputLocale" : {
        "type" : "string",
        "enum" : [ "en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "pt-PT" ],
        "description" : "Supported locale codes."
      },
      "DubTargetLocaleCodes" : {
        "type" : "string",
        "enum" : [ "es-ES", "en-US", "de-DE", "fr-FR", "it-IT", "pt-PT" ],
        "description" : "Supported target locale codes for dubbing"
      },
      "AudioInput" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/Source"
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/AudioInputMediaType"
          }
        },
        "required" : [ "url", "mediaType" ],
        "description" : "Audio Input details for transcribe or dub request."
      },
      "VideoInput" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/Source"
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/VideoInputMediaType"
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "dialogTrackNumber" : {
                "type" : "integer"
              }
            }
          }
        },
        "required" : [ "url", "mediaType" ],
        "description" : "Video Input details for transcribe or dub request."
      },
      "TranscriptInput" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/Source",
            "description" : "Pre-signed url to download the translated/edited transcripts."
          },
          "localeCode" : {
            "$ref" : "#/components/schemas/TranscriptInputLocale"
          }
        },
        "required" : [ "source" ],
        "description" : "Transcript input details for transcribe request."
      },
      "TranscribeRequest" : {
        "type" : "object",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TranscribeAudioInput"
        }, {
          "$ref" : "#/components/schemas/TranscribeVideoInput"
        } ],
        "properties" : {
          "targetLocaleCodes" : {
            "type" : "array",
            "$ref" : "#/components/schemas/TranscriptInputLocale"
          }
        },
        "description" : "Transcribe request body."
      },
      "TranscribeAudioInput" : {
        "type" : "object",
        "properties" : {
          "audio" : {
            "$ref" : "#/components/schemas/AudioInput"
          }
        },
        "required" : [ "audio" ],
        "description" : "Transcribe audio request body parameter details."
      },
      "TranscribeVideoInput" : {
        "type" : "object",
        "properties" : {
          "video" : {
            "$ref" : "#/components/schemas/VideoInput"
          }
        },
        "required" : [ "video" ],
        "description" : "Transcribe video request body parameter details."
      },
      "Source" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "format" : "uri",
            "description" : "The Pre-signed URL pointing to input source"
          }
        }
      },
      "Destination" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "The Pre-signed URL ponting to output"
          }
        }
      },
      "DubRequest" : {
        "type" : "object",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DubAudioRequest"
        }, {
          "$ref" : "#/components/schemas/DubVideoRequest"
        } ],
        "description" : "Dub request body."
      },
      "DubAudioRequest" : {
        "type" : "object",
        "properties" : {
          "targetLocaleCodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DubTargetLocaleCodes"
            },
            "description" : "Accepted values: ['en-US', 'es-ES', 'de-DE', 'fr-FR', 'it-IT', 'pt-PT']"
          },
          "transcripts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TranscriptInput"
            }
          },
          "audio" : {
            "$ref" : "#/components/schemas/AudioInput"
          }
        },
        "required" : [ "audio" ],
        "description" : "Dub audio request."
      },
      "DubVideoRequest" : {
        "type" : "object",
        "properties" : {
          "targetLocaleCodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DubTargetLocaleCodes"
            },
            "description" : "Accepted values: ['en-US', 'es-ES', 'de-DE', 'fr-FR', 'it-IT', 'pt-PT']"
          },
          "transcripts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TranscriptInput"
            }
          },
          "video" : {
            "$ref" : "#/components/schemas/VideoInput"
          },
          "lipSync" : {
            "type" : "boolean",
            "description" : "Supported values: [true, false]. Defaults to false."
          }
        },
        "required" : [ "video" ],
        "description" : "Dub video request."
      },
      "JobStatusLinkResponse" : {
        "type" : "object",
        "properties" : {
          "statusUrl" : {
            "type" : "string",
            "description" : "URL for getting job results"
          },
          "jobId" : {
            "type" : "string",
            "description" : "Associated job Id"
          }
        },
        "required" : [ "statusUrl", "jobId" ],
        "description" : "Job status response."
      },
      "FireflyJobApiResponseStatus" : {
        "type" : "string",
        "enum" : [ "pending", "running", "failed", "succeeded" ],
        "description" : "Status of the job."
      },
      "FireflyJobResponse" : {
        "type" : "object",
        "description" : "Firefly job response.",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/FireflyJobApiResponse"
        }, {
          "$ref" : "#/components/schemas/FireflyJobErrorResponse"
        } ]
      },
      "FireflyJobApiResponse" : {
        "type" : "object",
        "description" : "Firefly job success response.",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/FireflyJobApiResponseStatus"
          },
          "jobId" : {
            "type" : "string",
            "description" : "Associated job Id"
          },
          "outputs" : {
            "description" : "Job response details.",
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/DubJobResponse"
              }, {
                "$ref" : "#/components/schemas/TranscribeOutput"
              } ]
            }
          }
        },
        "required" : [ "jobId", "status" ]
      },
      "FireflyJobErrorResponse" : {
        "type" : "object",
        "description" : "Firefly job error response.",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/FireflyJobApiResponseStatus"
          },
          "jobId" : {
            "type" : "string",
            "description" : "Associated job Id"
          },
          "message" : {
            "type" : "string",
            "description" : "Error message"
          },
          "error_code" : {
            "type" : "string",
            "description" : "Associated error code"
          }
        },
        "required" : [ "jobId", "status" ]
      },
      "ErrorBody" : {
        "type" : "object",
        "description" : "Error response.",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Error message"
          },
          "error_code" : {
            "type" : "string",
            "description" : "Associated error code"
          }
        },
        "required" : [ "error_code", "message" ]
      },
      "TranscribeOutput" : {
        "type" : "array",
        "description" : "Transcribe success response",
        "items" : {
          "type" : "object",
          "properties" : {
            "destination" : {
              "$ref" : "#/components/schemas/Destination"
            },
            "localeCode" : {
              "$ref" : "#/components/schemas/TranscriptInputLocale"
            }
          }
        }
      },
      "DubJobResponse" : {
        "type" : "object",
        "description" : "Dubbing success response",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DubSuccess"
        }, {
          "$ref" : "#/components/schemas/DubPartialFailure"
        } ]
      },
      "DubSuccess" : {
        "type" : "object",
        "description" : "Dubbing success",
        "properties" : {
          "audioOutput" : {
            "$ref" : "#/components/schemas/AudioOutput"
          },
          "videoOutput" : {
            "$ref" : "#/components/schemas/VideoOutput"
          },
          "transcriptOutput" : {
            "$ref" : "#/components/schemas/TranscribeOutput"
          }
        }
      },
      "AudioOutputMediaType" : {
        "type" : "string",
        "enum" : [ "audio/wav" ],
        "description" : "Media type of the audio output"
      },
      "VideoOutputMediaType" : {
        "type" : "string",
        "enum" : [ "video/mp4", "video/mov" ],
        "description" : "Media type of the video output"
      },
      "AudioOutput" : {
        "type" : "object",
        "description" : "Audio output in dubbing response.",
        "properties" : {
          "mediaType" : {
            "$ref" : "#/components/schemas/AudioOutputMediaType"
          },
          "destination" : {
            "$ref" : "#/components/schemas/Destination"
          }
        }
      },
      "VideoOutput" : {
        "type" : "object",
        "description" : "Video output in dubbing response.",
        "properties" : {
          "mediaType" : {
            "$ref" : "#/components/schemas/VideoOutputMediaType"
          },
          "destination" : {
            "$ref" : "#/components/schemas/Destination"
          }
        }
      },
      "DubPartialFailure" : {
        "type" : "object",
        "description" : "Dubbing failure for specific language.",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorBody"
          }
        }
      }
    },
    "examples" : {
      "JobStatusLinkResponse" : {
        "summary" : "Success Submit Body",
        "value" : {
          "jobId" : "<jobId>",
          "statusUrl" : "https://<baseUrl>/beta/status/<jobId>"
        }
      },
      "AudioInputToGenerateTranscriptFromSourceAudio" : {
        "summary" : "Generate transcript for Audio input",
        "value" : {
          "audio" : {
            "source" : {
              "url" : "<pre-signed url for downloading the audio input>"
            },
            "mediaType" : "audio/mp3"
          }
        }
      },
      "AudioInputToGenerateTranscriptFromTargetLanguageAudio" : {
        "summary" : "Generate transcript for Audio input in specified target languages",
        "value" : {
          "audio" : {
            "source" : {
              "url" : "<pre-signed url for downloading the audio input>"
            },
            "mediaType" : "audio/mp3"
          },
          "targetLocaleCodes" : [ "en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "pt-PT" ]
        }
      },
      "VideoInputToGenerateTranscriptFromSourceVideo" : {
        "summary" : "Generate transcript for Video input",
        "value" : {
          "video" : {
            "source" : {
              "url" : "<pre-signed url for downloading the video input>"
            },
            "mediaType" : "video/mp4"
          }
        }
      },
      "VideoInputToGenerateTranscriptFromTargetLanguageVideo" : {
        "summary" : "Generate transcript for Video input in specified target languages",
        "value" : {
          "video" : {
            "source" : {
              "url" : "<pre-signed url for downloading the video input>"
            },
            "mediaType" : "video/mp4"
          },
          "targetLocaleCodes" : [ "en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "pt-PT" ]
        }
      },
      "DubRequestUsingAutoTranslatedTranscripts" : {
        "summary" : "Automated dubbing (Video)",
        "value" : {
          "video" : {
            "source" : {
              "url" : "<Pre-signed URL from which the video input should be read>"
            },
            "mediaType" : "video/mp4"
          },
          "targetLocaleCodes" : [ "en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "pt-PT" ],
          "lipSync" : true
        }
      },
      "DubRequestUsingAudioAutoTranslatedTranscripts" : {
        "summary" : "Automated dubbing (Audio)",
        "value" : {
          "audio" : {
            "source" : {
              "url" : "<Pre-signed URL from which the audio input should be read>"
            },
            "mediaType" : "audio/mp3"
          },
          "targetLocaleCodes" : [ "en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "pt-PT" ],
          "lipSync" : false
        }
      },
      "DubRequestUsingEditedSourceTranscript" : {
        "summary" : "Dubbing with edited transcript (Video)",
        "value" : {
          "video" : {
            "source" : {
              "url" : "<Pre-signed URL from which the video input should be read>"
            },
            "mediaType" : "video/mp4"
          },
          "targetLocaleCodes" : [ "en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "pt-PT" ],
          "transcripts" : [ {
            "source" : {
              "url" : "<Edited source transcript>"
            }
          } ],
          "lipSync" : true
        }
      },
      "DubRequestUsingAudioEditedSourceTranscript" : {
        "summary" : "Dubbing with edited transcript (Audio)",
        "value" : {
          "audio" : {
            "source" : {
              "url" : "<Pre-signed URL from which the audio input should be read>"
            },
            "mediaType" : "audio/mp3"
          },
          "targetLocaleCodes" : [ "en-US", "es-ES", "de-DE", "fr-FR", "it-IT", "pt-PT" ],
          "transcripts" : [ {
            "source" : {
              "url" : "<Edited source transcript>"
            }
          } ],
          "lipSync" : false
        }
      },
      "DubRequestUsingEditedTranslatedTranscript" : {
        "summary" : "Dubbing with Pre-Existing Translations (Video)",
        "value" : {
          "video" : {
            "source" : {
              "url" : "<Pre-signed URL from which the video input should be read>"
            },
            "mediaType" : "video/mp4"
          },
          "transcripts" : [ {
            "source" : {
              "url" : "<Pre-signed URL from which the translated input should be read>"
            },
            "localeCode" : "en-US"
          }, {
            "source" : {
              "url" : "<Pre-signed URL from which the translated input should be read>"
            },
            "localeCode" : "fr-FR"
          } ],
          "lipSync" : true
        }
      },
      "DubRequestUsingAudioEditedTranslatedTranscript" : {
        "summary" : "Dubbing with Pre-Existing Translations (Audio)",
        "value" : {
          "audio" : {
            "source" : {
              "url" : "<Pre-signed URL from which the audio input should be read>"
            },
            "mediaType" : "audio/mp3"
          },
          "transcripts" : [ {
            "source" : {
              "url" : "<Pre-signed URL from which the translated input should be read>"
            },
            "localeCode" : "en-US"
          }, {
            "source" : {
              "url" : "<Pre-signed URL from which the translated input should be read>"
            },
            "localeCode" : "fr-FR"
          } ],
          "lipSync" : false
        }
      },
      "TranscribeJobSucceeded" : {
        "summary" : "Transcribe job succeeded",
        "value" : {
          "status" : "succeeded",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "destination" : {
              "url" : "<URL from which the transcribed audio/video can be downloaded>"
            },
            "localeCode" : "en-UK"
          }, {
            "destination" : {
              "url" : "<URL from which the transcribed audio/video can be downloaded>"
            },
            "localeCode" : "en-US"
          }, {
            "destination" : {
              "url" : "<URL from which the transcribed audio/video can be downloaded>"
            },
            "localeCode" : "en-Fr"
          } ]
        }
      },
      "TranscribeJobPartiallySucceeded" : {
        "summary" : "Transcribe job partially succeeded",
        "value" : {
          "status" : "partially_succeeded",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "destination" : {
              "url" : "<URL from which the transcribed audio/video can be downloaded>"
            },
            "localeCode" : "en-UK"
          }, {
            "destination" : {
              "url" : "<URL from which the transcribed audio/video can be downloaded>"
            },
            "localeCode" : "en-US"
          }, {
            "error" : {
              "error_code" : "validation_error",
              "message" : "The transcript for localeCode en-Fr is incorrectly formatted.",
              "localeCode" : "en-Fr"
            }
          } ]
        }
      },
      "DubJobSucceeded" : {
        "summary" : "Dub job succeeded",
        "value" : {
          "status" : "succeeded",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "audio" : {
              "mediaType" : "audio/wav",
              "destination" : {
                "url" : "Pre signed url for audio-en-US"
              }
            },
            "video" : {
              "mediaType" : "video/mp4",
              "destination" : {
                "url" : "Pre signed url for video-en-US"
              }
            },
            "transcript" : {
              "destination" : {
                "url" : "Pre signed url for text-en-US"
              }
            }
          }, {
            "localeCode" : "fr-FR",
            "audio" : {
              "mediaType" : "audio/wav",
              "destination" : {
                "url" : "Pre signed url for audio-fr-FR"
              }
            },
            "video" : {
              "mediaType" : "video/mp4",
              "destination" : {
                "url" : "Pre signed url for video-fr-FR"
              }
            },
            "transcript" : {
              "destination" : {
                "url" : "Pre signed url for text-fr-FR"
              }
            }
          } ]
        }
      },
      "DubJobPartiallySucceeded" : {
        "summary" : "Dub job partially succeeded",
        "value" : {
          "status" : "partially_succeeded",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Incorrectly formatted transcript for localeCode en-US"
            }
          }, {
            "localeCode" : "fr-FR",
            "audio" : {
              "mediaType" : "audio/wav",
              "destination" : {
                "url" : "<Pre signed url for audio-fr-FR>"
              }
            },
            "video" : {
              "mediaType" : "video/mp4",
              "destination" : {
                "url" : "<Pre signed url for video-fr-FR>"
              }
            },
            "transcript" : {
              "destination" : {
                "url" : "<Pre signed url for text-fr-FR>"
              }
            }
          } ]
        }
      },
      "JobFailed" : {
        "summary" : "Job failed",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Incorrectly formatted transcript for localeCode en-US"
            }
          }, {
            "localeCode" : "fr-FR",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Incorrectly formatted transcript for localeCode fr-FR"
            }
          } ]
        }
      },
      "JobIsStillRunning" : {
        "summary" : "Job is still running",
        "value" : {
          "status" : "running",
          "jobId" : "123e4567-e89b-12d3-a456-426614174003"
        }
      },
      "JobIsInPendingState" : {
        "summary" : "Job is in pending state",
        "value" : {
          "status" : "pending",
          "jobId" : "123e4567-e89b-12d3-a456-426614174003"
        }
      },
      "ErrorBodyBadRequest" : {
        "summary" : "Error Body Bad Request",
        "value" : {
          "error_code" : "400001",
          "message" : "Invalid request. Please check the input data."
        }
      },
      "ErrorBodyUnauthorized" : {
        "summary" : "Error Body Unauthorized",
        "value" : {
          "error_code" : "401013",
          "message" : "Oauth token is not valid"
        }
      },
      "ErrorBodyForbidden" : {
        "summary" : "Error Body Forbidden",
        "value" : {
          "error_code" : "403220",
          "message" : "Token not allowed in the current context"
        }
      },
      "ErrorBodyResourceNotFound" : {
        "summary" : "Error Body Resource not found",
        "value" : {
          "error_code" : "unkown_job_id",
          "message" : "The requested resource 123e4567-e89b-12d3-a456-426614174002 was not found."
        }
      },
      "ErrorBodyMethodNotAllowed" : {
        "summary" : "Error Body Method Not Allowed",
        "value" : {
          "error_code" : "405001",
          "message" : "The requested method is not allowed on this endpoint."
        }
      },
      "ErrorBodyTooManyRequests" : {
        "summary" : "Error Body Too many requests",
        "value" : {
          "message" : "Too Many Requests",
          "error_code" : "429011"
        }
      },
      "ErrorBodyInternalServerError" : {
        "summary" : "Error Body Internal Server Error",
        "value" : {
          "error_code" : "500001",
          "message" : "An internal server error occurred. Please try again later."
        }
      },
      "ErrorBodyServiceInternalServerError" : {
        "summary" : "Error Body Internal Server Error by service",
        "value" : {
          "error_code" : "runtime_error",
          "message" : "Internal Server Error."
        }
      },
      "Access_error" : {
        "summary" : "Error Body for unauthorized access",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "access_error",
              "message" : "Not authorized. See X-Access-Error header for details"
            }
          } ]
        }
      },
      "ValidationError_AudioVideo_Required" : {
        "summary" : "Error Body for missing audio or video property",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "The body of the request must contain an \"audio\" property or a \"video\" property"
            }
          } ]
        }
      },
      "ValidationErrorTargetOrTranscripts" : {
        "summary" : "Error for request including both targetLocaleCodes and transcripts array",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Request must include either targetLocaleCodes or transcripts array, not both"
            }
          } ]
        }
      },
      "ValidationErrorMissingLocale" : {
        "summary" : "Error for missing or unsupported localeCode",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "The request does not contain a localeCode property, or the value of the property is not a supported localCode"
            }
          } ]
        }
      },
      "LanguageNotSupported" : {
        "summary" : "Error for unsupported source language",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "language_not_supported",
              "message" : "Source language unsupported"
            }
          } ]
        }
      },
      "AudioSpeechNotDetectedSingle" : {
        "summary" : "Error for no speech detected in single audio track",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "audio_speech_not_detected",
              "message" : "No speech detected in audio track"
            }
          } ]
        }
      },
      "ValidationErrorRedubbing" : {
        "summary" : "Error for attempting re-dubbing of already dubbed content",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Re-dubbing is not allowed for already dubbed content"
            }
          } ]
        }
      },
      "ValidationErrorProprietaryContent" : {
        "summary" : "Error for input media with proprietary content",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Input media contains proprietary content; service not licensed for such content"
            }
          } ]
        }
      },
      "ValidationErrorUnrecognizedLanguage" : {
        "summary" : "Error for unrecognized language in audio track",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Unrecognized language in audio track"
            }
          } ]
        }
      },
      "AudioSpeechNotDetectedMulti" : {
        "summary" : "Error for no speech detected in any audio track",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "audio_speech_not_detected",
              "message" : "No speech detected in any audio track"
            }
          } ]
        }
      },
      "ValidationErrorDialogTrackNumber" : {
        "summary" : "Error for invalid dialogTrackNumber property",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "audio_speech_not_detected",
              "message" : "Invalid dialogTrackNumber; should be an integer between 1 and 7"
            }
          } ]
        }
      },
      "ValidationErrorDownloadFailure" : {
        "summary" : "Error for failure in downloading data from input URL",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "audio_speech_not_detected",
              "message" : "Error downloading data from input URL"
            }
          } ]
        }
      },
      "VideoNotDetected" : {
        "summary" : "Error for invalid video file",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "video_not_detected",
              "message" : "Downloaded media is not a valid video file"
            }
          } ]
        }
      },
      "AudioNotDetectedUnsupported" : {
        "summary" : "Error for unsupported audio format",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "audio_not_detected",
              "message" : "Downloaded media is not a supported audio format"
            }
          } ]
        }
      },
      "ValidationErrorVideoDuration" : {
        "summary" : "Error for video duration exceeding limit",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Video duration should be under 30 minutes"
            }
          } ]
        }
      },
      "InputMediaIndecipherableFaces" : {
        "summary" : "Error for no faces detected in the video",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "input_media_indecipherable",
              "message" : "Lip-Sync validation failed, no faces detected in the video"
            }
          } ]
        }
      },
      "ValidationErrorCodecUnsupported" : {
        "summary" : "Error for unsupported video codec",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Unsupported video codec"
            }
          } ]
        }
      },
      "ValidationErrorMaxSupportedResolution" : {
        "summary" : "Error for video resolution exceeding maximum supported resolution",
        "value" : {
          "status" : "failed",
          "jobId" : "123e4567-e89b-12d3-a456-426614174002",
          "outputs" : [ {
            "localeCode" : "en-US",
            "error" : {
              "error_code" : "validation_error",
              "message" : "Video resolution should not be greater than maximum supported resolution 1920x1080"
            }
          } ]
        }
      },
      "ValidationErrorBlankTranscriptSourceField" : {
        "summary" : "Transcript source field cannot be blank",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Transcript source field cannot be blank"
        }
      },
      "ValidationErrorBlankTargetLocaleCode" : {
        "summary" : "Target locale codes cannot be empty",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Target locale codes cannot be empty"
        }
      },
      "ValidationErrorVideoSourceBlank" : {
        "summary" : "Error for blank video source field",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Video source field cannot be blank"
        }
      },
      "ValidationErrorAudioSourceBlank" : {
        "summary" : "Error for blank audio source field",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Audio source field cannot be blank"
        }
      },
      "ValidationErrorInputSourceBlank" : {
        "summary" : "Error for blank input source field",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Input source field cannot be blank"
        }
      },
      "ValidationErrorVideoAndAudioSimultaneous" : {
        "summary" : "Error for providing both video and audio inputs simultaneously",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Cannot provide both video and audio input simultaneously"
        }
      },
      "ValidationErrorVideoInputMediaTypeMissing" : {
        "summary" : "Error for missing video input media type",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Video input media type must be specified"
        }
      },
      "ValidationErrorAudioInputMediaTypeMissing" : {
        "summary" : "Error for missing audio input media type",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Audio input media type must be specified"
        }
      },
      "ValidationErrorSourceUrlEmpty" : {
        "summary" : "Error for empty source URL field",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Source URL field cannot be empty"
        }
      },
      "ValidationErrorInvalidVideoAudioSourceUrl" : {
        "summary" : "Error for invalid video/audio input source URL",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Invalid video/audio input source URL: <<source url>>"
        }
      },
      "ValidationErrorInvalidTranscriptUrl" : {
        "summary" : "Error for invalid transcript input source URL",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Invalid transcript input source URL: <<input transcript url>>"
        }
      },
      "ValidationErrorUnsupportedVideoMediaType" : {
        "summary" : "Error for unsupported video media type",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Unsupported input video media type: <<input media type>>"
        }
      },
      "ValidationErrorUnsupportedAudioMediaType" : {
        "summary" : "Error for unsupported audio media type",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Unsupported input audio media type: <<input audio media type>>"
        }
      },
      "ValidationErrorUnsupportedTargetLocaleCode" : {
        "summary" : "Error for unsupported target locale code",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Unsupported target locale code: <<input target locale>>"
        }
      },
      "ValidationErrorInvalidMediaProvided" : {
        "summary" : "Error for invalid media provided as input",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Invalid media provided"
        }
      },
      "ValidationErrorMissingTargetLocaleCode" : {
        "summary" : "Error for missing target locale code",
        "value" : {
          "error_code" : "validation_error",
          "message" : "At least one target locale code required"
        }
      },
      "ValidationErrorLocaleCodeNotRequiredForEditedTranscript" : {
        "summary" : "Error indicating locale code is not required with edited transcript",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Locale code not needed when providing an edited transcript"
        }
      },
      "ValidationErrorEitherTargetLocaleCodesOrTranscriptionRequired" : {
        "summary" : "Error for missing target locale codes or transcription input",
        "value" : {
          "error_code" : "validation_error",
          "message" : "Provide either target locale codes or transcription input for dubbing"
        }
      }
    }
  }
}
