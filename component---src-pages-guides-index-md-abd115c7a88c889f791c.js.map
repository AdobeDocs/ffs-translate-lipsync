{"version":3,"file":"component---src-pages-guides-index-md-abd115c7a88c889f791c.js","mappings":"yTAOaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAI5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,kBACJ,mBACJA,EAAAA,EAAAA,KAAA,SAAI,6MACJA,EAAAA,EAAAA,KAAA,SAAI,wWACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,iBACJ,kBACJA,EAAAA,EAAAA,KAAA,SAAI,6MAA4MA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,QAAqB,wCACjQH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBACX,8PAINH,EAAAA,EAAAA,KAAA,SAAI,iCACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,aAA0B,gBAC3EH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,iBAA8B,oBAC/EH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,SAAsB,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,UAAuB,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,WAAwB,MAAKH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAM,yBAE9NH,EAAAA,EAAAA,KAAA,SAAI,kdACJA,EAAAA,EAAAA,KAAA,SAAI,gHAGR,CAEAN,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/translate-lipsync/translate-lipsync/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport \"../../styles/main.css\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h1>\n    <p>{`Server-to-server authentication credentials lets your application’s server generate access tokens and make API calls on behalf of your application. This is sometimes referred to as “two-legged OAuth”.`}</p>\n    <p>{`For your application to generate an access token, an end-user does not need to sign in or provide consent to your application. Instead, your application can use its credentials (client id and secrets) to authenticate itself and generate access tokens. Your application can then use the generated access token to call Adobe APIs and services on its behalf.`}</p>\n    <h2 {...{\n      \"id\": \"access-tokens\"\n    }}>{`Access tokens`}</h2>\n    <p>{`Each access token is valid for 24 hours. To adhere with OAuth best practices, you should generate a new token every 23 hours. Generating access tokens can be accomplished programmatically by sending a `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` request to the following endpoint:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -X POST 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n-H 'Content-Type: application/x-www-form-urlencoded' \\\\\n-d 'grant_type=client_credentials&client_id={client_id}&client_secret={client_secret}&scope=openid,AdobeID,firefly_enterprise'\n`}</code></pre>\n    <p>{`The required parameters are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`client_id`}</inlineCode>{`: Client ID`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`client_secret`}</inlineCode>{`: Client secret`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`scope`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`openid`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`AdobeID`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`firefly_enterprise`}</inlineCode></li>\n    </ul>\n    <p>{`Automate your token generation by calling the IMS endpoint above using standard OAuth2 libraries. Using industry-standard libraries is the quickest and most secure way of integrating with OAuth. We recommend developers diligently pick the OAuth 2.0 library that works best for their application. Your teams' projects are likely leveraging OAuth libraries already to connect with other APIs. Use these libraries to automatically generate tokens when they expire.`}</p>\n    <p>{`The token endpoint also returns an expiry date and the token itself (when decoded) contains the expiry time.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}